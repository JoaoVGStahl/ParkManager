<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Rlf1dEMkAAAAAElFTkSuQmCC
</value>
  </data>
</root>