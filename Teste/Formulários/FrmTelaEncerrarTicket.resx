<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>