<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSair.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="splitter1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN8SURBVFhH1Zdb
        SFNxHMe3ne1sZ2ebplBCRWZ2oYvZqm3ZNssLaaWgracI08qoHipftMyHUgq6PfQQRIR0wwikyHopguje
        S0RUUFFS0Q3LWnndlG/nd7YjU49uZ84uf/g8bOfs8/+w/38756iGGVO1Ol2PyWz2E0Yj323guE6lMAzj
        I1dAqWxYHU6Xr9nbCeJzZw9afVBM+vwF38gVUEY2MvW8pYnlzA8dTncMAha2koucgjs3MMUwg2H1PzLK
        ajDPswUOl9s/0gDrQvtPcmWU7gaj0/8MTjP0YHRsp+fIVSyvqUdJ+ebuWATkVBwFOckdnGboIQUQzd4u
        718LWFZ1HDn5K2KyBFEF0IeETfjvBHxs96Glq1cxVpujLZIAu8AOgUoNw/jnrCxFqqsAEycl91buqUMo
        u2r341HzB1y+ebff+0NBDnKRk9w0R3Aum4BKxZrjqkxjx/unLClEanYxZuavwZwV68QPpBWUYm5BWT/S
        C8tQVNeA3O2HBx2TgxzkCmVW3poePjHJq9VzFSqWt7S5Kw4ip+Y48vaeFr+qP8HKPWehNRhbVFrW4KfJ
        ieW1Z2BITAJjsoDhLbCvrYTn8BXExSeC54wwCjhKdsoKo0HYEx2DAhhTHNSP/dCUVyO9aBNWHWqC2WjC
        r93VqHC6MG/VFllZNMgGqFkD1Nv2QW1b2hegZ1nszcqCMzl59AOsnq2YLWwUIm/XCfFEa/FmpAU3Zn71
        yUGiaJENkDtxtJANmJ7lAcubwXKmEcNZElBYdx7TlhaLTnKHDdBxPIoPXOp3YiwgJ7lD35MPMPDiOo8G
        5A4boNZoMGZCKizjJsLImzBzbvqIIAe5yEnusAG0dnRQvBi5MsULEfHuVzc+dvgVY1vsFl3klNzDBgiv
        xX87+slJAfeev8KJc+dR33AhYp42vxcvx/MXuQIuwUnusAEzslcjZVEexqdl9AU0Xr+Jtes3omRDecRc
        u32/L4Bc5CR32ADp4MAliPaGhAKkJRiIGCDcBbcb4hJ8IuaEDr0p3kvoOHOb3enupcmPnWnApMkpSFbA
        qQuNYoDVltFFLskbiobR/qBbAqPAGBky7YsDDyavv7fjxacWvPnSGjFfhbshCgg+mGQOcEvQ3EMOqxRw
        99lLxZvwyeu3oQGKnoyk0Rdw8cYtxZvw+p0HsQsgot2E/3XAH3g8V6l+A8niSq2APUquAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>